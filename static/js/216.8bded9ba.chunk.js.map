{"version":3,"file":"static/js/216.8bded9ba.chunk.js","mappings":"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","sources":["components/AuthForm/AuthValidation.jsx","components/Buttons/AuthButton.jsx","components/Inputs/EmailInput.jsx","components/Inputs/PasswordInput.jsx","components/AuthForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import { object, string } from 'yup';\n\nexport const loginSchema = object({\n  email: string()\n    .matches(/^[\\w-\\\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, 'Invalid email')\n    .required('Email is a required'),\n  password: string()\n    .min(6, ({ min }) => `Password must be at least ${min} characters`)\n    .required('Password is a required'),\n});\n\nexport const registrationSchema = object({\n  ...loginSchema.fields,\n  name: string()\n    .min(3, ({ min }) => `Name must be at least ${min} characters`)\n    .max(30, ({ max }) => `Name must be at most ${max} characters`)\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Name may contain only letters, apostrophe, dash and spaces.'\n    )\n    .required('Name is required'),\n});\n","import { Button } from '@mui/material';\nimport { useFormContext } from 'react-hook-form';\n\nexport default function AuthBtn({ children }) {\n  const {\n    formState: { isValid },\n  } = useFormContext();\n  return (\n    <Button variant=\"outlined\" fullWidth type=\"submit\" disabled={!isValid}>\n      {children}\n    </Button>\n  );\n}\n","import { TextField } from '@mui/material';\nimport { useFormContext } from 'react-hook-form';\n\nexport function EmailInput() {\n  const {\n    register,\n    formState: { errors },\n  } = useFormContext(); // retrieve all hook methods\n  return (\n    <>\n      <TextField\n        {...register('email', {\n          required: 'email is required',\n        })}\n        type=\"email\"\n        label=\"Email\"\n        variant=\"outlined\"\n        fullWidth\n      />\n      {errors?.email && (\n        <span style={{ color: 'red' }}>\n          {errors?.email?.message || 'Error!'}\n        </span>\n      )}\n    </>\n  );\n}\n","import {\n  FormControl,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n} from '@mui/material';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { useFormContext } from 'react-hook-form';\nimport { useState } from 'react';\n\nexport function PasswordInput() {\n  const {\n    register,\n    formState: { errors },\n  } = useFormContext(); // retrieve all hook methods\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return (\n    <FormControl sx={{ m: 1, width: '100%', margin: 0 }} variant=\"outlined\">\n      <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n      <OutlinedInput\n        {...register('password')}\n        type={showPassword ? 'text' : 'password'}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}\n              edge=\"end\"\n            >\n              {showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        }\n        label=\"Password\"\n      />\n      {errors?.password && (\n        <span style={{ color: 'red' }}>\n          {errors?.password?.message || 'Error!'}\n        </span>\n      )}\n    </FormControl>\n  );\n}\n","import { Box } from '@mui/material';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { toast } from 'react-toastify';\n\nimport AuthBtn from 'components/Buttons/AuthButton';\nimport { EmailInput } from '../Inputs/EmailInput';\nimport { PasswordInput } from '../Inputs/PasswordInput';\nimport { loginSchema } from './AuthValidation';\nimport { useLoginMutation } from 'redux/phonebookApi';\n\nexport default function LoginForm() {\n  const methods = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(loginSchema),\n  });\n\n  const [login] = useLoginMutation();\n\n  const onSubmit = data => {\n    login(data)\n      .unwrap()\n      .then(() => toast.success('Login success'))\n      .catch(error => {\n        if (error?.status === 400) {\n          toast.error('incorrect login or password');\n        }\n      });\n    methods.reset();\n  };\n\n  return (\n    <FormProvider {...methods}>\n      <Box\n        onSubmit={methods.handleSubmit(onSubmit)}\n        component=\"form\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        gap={2}\n        width=\"100%\"\n      >\n        <EmailInput />\n        <PasswordInput />\n        <AuthBtn>Login</AuthBtn>\n      </Box>\n    </FormProvider>\n  );\n}\n","import { Box, Container, Link, Typography } from '@mui/material';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport LoginForm from 'components/AuthForm/LoginForm';\n\nexport default function LoginPage() {\n  return (\n    <>\n      <Container\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexDirection=\"column\"\n          width=\"400px\"\n          minHeight=\"350px\"\n          gap={2}\n        >\n          <Typography variant=\"h4\" component=\"p\" textAlign=\"center\">\n            Login\n          </Typography>\n          <Typography textAlign=\"center\" variant=\"h6\" component=\"p\">\n            Please enter your Email & Password\n          </Typography>\n          <LoginForm />\n          <Typography variant=\"h6\" component=\"p\">\n            Don't have an account?\n          </Typography>\n          <Typography textAlign=\"center\">\n            <Link component={RouterLink} to={'/register'} underline=\"always\">\n              Sign up\n            </Link>\n          </Typography>\n        </Box>\n      </Container>\n    </>\n  );\n}\n"],"names":["loginSchema","object","email","string","matches","required","password","min","registrationSchema","fields","name","max","AuthBtn","children","isValid","useFormContext","formState","variant","fullWidth","type","disabled","EmailInput","register","errors","label","style","color","message","PasswordInput","useState","showPassword","setShowPassword","sx","m","width","margin","htmlFor","endAdornment","position","onClick","show","onMouseDown","event","preventDefault","edge","LoginForm","methods","useForm","mode","resolver","yupResolver","useLoginMutation","login","Box","onSubmit","handleSubmit","data","unwrap","then","toast","catch","error","status","reset","component","display","alignItems","justifyContent","flexDirection","gap","LoginPage","Container","minHeight","Typography","textAlign","Link","RouterLink","to","underline"],"sourceRoot":""}